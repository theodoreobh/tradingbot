//@version=6
strategy("[bot1] Bollinger-Bands Strat v5", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100) //default qty means the bot will be extreme compared to v4 buying 100% of original balance everytrade 
//BTC USD
//1 day candles

length = 20 // how many candles analyzed/timeframe
src = close // use closing price as indication
stdev = ta.stdev(src, length) //standard derivation
atr = ta.atr(14) // fetching atr of last 14 candles
volatilityFactor = atr / ta.sma(atr, 50) //how volatile btc is compared to the sma 
mult = 1.5 + 0.5 * volatilityFactor //adaptive bands

basis = ta.sma(src, length) //fethcing standard moving average
dev = mult * stdev // coefficient for band size
upper = basis + dev //creating bands
lower = basis - dev

//fetching rsi and ema
rsi = ta.rsi(close, 14) //useless in this v6
ema50 = ta.ema(close, 50)

//trend confirmation
longOK = close > ema50
shortOK = close < ema50

//entry conditions
buySignal = ta.crossover(src, lower)
sellSignal = ta.crossunder(src, upper)

var float longEntryPrice = na
var float shortEntryPrice = na

if strategy.position_size == 0
    longEntryPrice := na
    shortEntryPrice := na

if buySignal and longOK
    longEntryPrice := close
    strategy.entry("Long", strategy.long) //buy

if sellSignal and shortOK
    shortEntryPrice := close
    strategy.entry("Short", strategy.short) //shirt

//trailling stop loss
stopLossBars = 5
trailFactor = 5.0  

if not na(longEntryPrice)
    longStopLoss = ta.lowest(low, stopLossBars) //lowest low in last 10 candles
    longRisk = longEntryPrice - longStopLoss //risk rweard
    trailOffset = longRisk * trailFactor //distance from trailling stop loss to price
    strategy.exit("Long Exit", from_entry="Long", stop=longStopLoss, limit=upper, trail_offset=trailOffset, trail_points=trailOffset) //exit

if not na(shortEntryPrice) ////same as above but for short trade, so everythign reversed
    shortStopLoss = ta.highest(high, stopLossBars)
    shortRisk = shortStopLoss - shortEntryPrice
    trailOffset = shortRisk * trailFactor
    strategy.exit("Short Exit", from_entry="Short", stop=shortStopLoss, limit=lower, trail_offset=trailOffset, trail_points=trailOffset)
